spring:
  profiles:
    group:
      "local": "local"
      "deploy": "deploy"
    active: ${SPRING_PROFILES_ACTIVE:deploy}
  application:
    name: vowser-backend
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  jackson:
    default-property-inclusion: non_null
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: jdbc:mariadb://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:vowserdb}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
    show-sql: false
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: ${OAUTH2_REDIRECT_URI:/login/oauth2/code/naver}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

management:
  endpoints:
    web:
      exposure:
        include: health,info

logging:
  pattern:
    dateformat: yyyy-MM-dd HH:mm:ss.SSS

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true

vowser:
  db:
    encryption-key: ${VOWSER_DB_ENCRYPTION_KEY}

naver:
  cloud:
    client-id: ${NAVER_CLOUD_CLIENT_ID}
    client-secret: ${NAVER_CLOUD_CLIENT_SECRET}
    stt:
      url: ${NAVER_CLOUD_STT_URL:https://naveropenapi.apigw.ntruss.com/recog/v1/stt}

gcp:
  project-id: "sixth-radar-463501-n1"
  location: "global"

google:
  cloud:
    credentials:
      json: ${GOOGLE_CREDENTIALS_JSON:}

speech:
  language-code: ko-KR
  model: long

websocket:
  timeout:
    write: 10
    connect: 30

network:
  google-cloud:
    https-port: 443
  data:
    bytes-per-kb: 1024

mcp:
  search:
    path-limit: 3

content:
  types:
    text: "text"
    image: "image"

jwt:
  secret: ${JWT_SECRET}
  access-token-validity-in-seconds: ${JWT_ACCESS_TOKEN_VALIDITY}
  refresh-token-validity-in-seconds: ${JWT_REFRESH_TOKEN_VALIDITY}
  issuer: ${JWT_ISSUER}
  header: Authorization
  prefix: "Bearer "

oauth2:
  success-redirect-url: ${OAUTH2_SUCCESS_REDIRECT_URL}

