pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'chmod +x ./gradlew'
                sh './gradlew build --no-daemon'
            }
        }

        stage('Deploy to Production') {
            when {
                branch 'main'
            }
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'VOWSER_MARIADB_PASSWORD', variable: 'MARIADB_PASSWORD_VAR'),
                        string(credentialsId: 'VOWSER_MARIADB_ROOT_PASSWORD', variable: 'MARIADB_ROOT_PASSWORD_VAR'),
                        string(credentialsId: 'VOWSER_GEMINI_API_KEY', variable: 'GEMINI_API_KEY_VAR'),
                        string(credentialsId: 'VOWSER_GOOGLE_CREDENTIALS', variable: 'GOOGLE_CREDENTIALS_VAR')
                    ]) {

                        echo "Starting deployment to production..."

                        writeFile file: 'google-credentials.json', text: GOOGLE_CREDENTIALS_VAR
                        def googleCredentialsPath = sh(script: 'pwd', returnStdout: true).trim() + '/google-credentials.json'

                        sh """
                            export MARIADB_PASSWORD=${MARIADB_PASSWORD_VAR}
                            export MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD_VAR}
                            export GEMINI_API_KEY=${GEMINI_API_KEY_VAR}
                            export GOOGLE_APPLICATION_CREDENTIALS=${googleCredentialsPath}

                            export GIT_COMMIT_SHA=\$(git rev-parse --short HEAD)

                            docker compose -f infra/docker-compose.prod.yml up -d --build
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            deleteDir()
            echo 'Pipeline finished.'
        }
    }
}